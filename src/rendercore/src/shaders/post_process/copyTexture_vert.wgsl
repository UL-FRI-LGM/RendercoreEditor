//////////////////////////////////////////////////////////////////////////////////
// DEF
//////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////
// UIO
//////////////////////////////////////////////////////////////////////////////////

struct i_VertexInput {
	@location(0) a_position_objectspace: vec3<f32>,
	@location(1) a_normal_objectspace: vec3<f32>,
	@location(2) a_uv_texturespace: vec2<f32>,
}

struct v_VertexOutputFragmentInput {
	@builtin(position) position_clipspace: vec4<f32>,

	@location(0) v_uv_texturespace: vec2<f32>,
};


//////////////////////////////////////////////////////////////////////////////////
// FUNC
//////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////
// MAIN
//////////////////////////////////////////////////////////////////////////////////

@vertex
fn main(input: i_VertexInput) -> v_VertexOutputFragmentInput {    

	var output: v_VertexOutputFragmentInput;


	output.position_clipspace = vec4<f32>(input.a_position_objectspace.xyz, 1.0);
	output.v_uv_texturespace = vec2<f32>(input.a_uv_texturespace.x, 1.0 - input.a_uv_texturespace.y);


	return output;
}
